def solve(k):
    global maxans, minans
    if k == N - 1:
        val = nums[0]
        for i in range(N - 1):
            if ops[perm[i]] == 0:
                val += nums[i + 1]
            elif ops[perm[i]] == 1:
                val -= nums[i + 1]
            elif ops[perm[i]] == 2:
                val *= nums[i + 1]
            else:
                val = int(val / nums[i + 1])
        maxans = max(maxans, val)
        minans = min(minans, val)
    else:
        for i in range(N - 1):
            if not visited[i]:
                visited[i] = 1
                perm[k] = i
                solve(k + 1)
                visited[i] = 0


N = int(input())
nums = list(map(int, input().split()))
opc = list(map(int, input().split()))

ops = []
for i in range(4):
    for j in range(opc[i]):
        ops.append(i)

visited = [0] * (N - 1)
perm = [0] * (N - 1)
maxans, minans = -1e10, 1e10
solve(0)
print("%d\n%d" % (maxans, minans))





def solve(k):
    global maxans, minans
    if k == N - 1:
        val = nums[0]
        for i in range(N - 1):
            if ops[i] == 0:
                val += nums[i + 1]
            elif ops[i] == 1:
                val -= nums[i + 1]
            elif ops[i] == 2:
                val *= nums[i + 1]
            else:
                val = int(val / nums[i + 1])
        maxans = max(maxans, val)
        minans = min(minans, val)
    else:
        for i in range(k, N - 1):
            ops[k], ops[i] = ops[i], ops[k]
            solve(k + 1)
            ops[k], ops[i] = ops[i], ops[k]


N = int(input())
nums = list(map(int, input().split()))
opc = list(map(int, input().split()))

ops = []
for i in range(4):
    ops += [i] * opc[i]

maxans, minans = -1e10, 1e10
solve(0)
print("%d\n%d" % (maxans, minans))






def solve(k, val, add, sub, mul, div):
    global maxans, minans
    if k == N:
        maxans = max(val, maxans)
        minans = min(val, minans)
        return
    else:
        if add:
            solve(k + 1, val + nums[k], add - 1, sub, mul, div)
        if sub:
            solve(k + 1, val - nums[k], add, sub - 1, mul, div)
        if mul:
            solve(k + 1, val * nums[k], add, sub, mul - 1, div)
        if div:
            solve(k + 1, int(val / nums[k]), add, sub, mul, div - 1)


N = int(input().strip())
nums = list(map(int, input().split()))
ops = list(map(int, input().split()))

maxans, minans = -1e10, 1e10
solve(1, nums[0], ops[0], ops[1], ops[2], ops[3])
print("%d\n%d" % (maxans, minans))

